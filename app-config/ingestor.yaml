# Ingestor Selection - Choose which XRD ingestor to use
# Options: 
# - 'kubernetes-ingestor' - Upstream TeraSky version
# - 'kubernetes-ingestor-custom' - Our customized fork
# - 'kubernetes-ingestor-own' - Legacy internal version  
# - 'crossplane-ingestor' - Refactored Crossplane-focused version
# Available ingestor selectors:
# - 'kubernetes-ingestor-own' - Internal workspace version (legacy)
# - 'kubernetes-ingestor-custom' - TeraSky fork from backstage-plugins-custom workspace (current)
# - 'kubernetes-ingestor' - Open Service Portal NPM package v1.0.0 (new)
# - 'open-service-portal-ingestor' - Alternative selector for NPM package
# - 'crossplane-ingestor' - Refactored Crossplane-focused version
ingestorSelector: 'kubernetes-ingestor-custom'

# All ingestors share the same configuration below
# Only the ingestorSelector above determines which one runs

# Kubernetes Ingestor configuration
kubernetesIngestor:
  # Mappings of kubernetes resource metadata to backstage entity metadata
  mappings:
    namespaceModel: 'namespace'       # Options: cluster, namespace, default
    nameModel: 'name-cluster'         # Options: name-cluster, name-namespace, name
    titleModel: 'name'                # Options: name, name-cluster, name-namespace
    systemModel: 'cluster'            # Options: cluster, namespace, cluster-namespace, default

  # Component ingestion settings
  components:
    enabled: true
    taskRunner:
      frequency: 10  # How often to query clusters (in seconds)
      timeout: 600   # Max processing time
    excludedNamespaces:
      - kube-public
      - kube-system
      - kube-node-lease
      - flux-system
      - crossplane-system
      - backstage-system
      - calico-system
      - calico-apiserver
      - tigera-operator
      - ingress-nginx
      - external-dns
      - kubernetes-dashboard
  
  # Crossplane XRD template generation
  crossplane:
    enabled: true
    claims:
      # Ingest all claims and XRs from the cluster
      ingestAllClaims: true
    xrds:
      enabled: true
      ingestAllXRDs: true  # Ingest all XRDs with the label
      taskRunner:
        frequency: 10  # XRD scanning every 10 seconds (faster for testing)
        timeout: 600
      convertDefaultValuesToPlaceholders: true
      allowedTargets: ['github.com']
      publishPhase:
        target: github
        git:
          repoUrl: github.com?owner=open-service-portal&repo=catalog-orders
          targetBranch: main
        enabled: true
        # allowRepoSelection: true  # Users can override if needed
  genericCRDTemplates:
    # Settings related to the final steps of a software template
    publishPhase:
      allowedTargets: ['github.com']
      target: github
      git:
        repoUrl: github.com?owner=open-service-portal&repo=catalog-orders
        targetBranch: main
        targetPath: 'crds'  # Put generic CRDs in a subdirectory
      # allowRepoSelection: true
    # crdLabelSelector:
    #   key: terasky.backstage.io/generate-form
    #   value: "true"
    # crds:
    #   - certificates.cert-manager.io